How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It could help to find out which lines had been changed.
    So I could look at changed lines to find out the bug.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could go back to any version I want.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros:
    1. Manually chosen versions are more meaningful.
    2. They can save some spaces.
    3. They can be operated offline.
    Cons:
    1. Sometimes, due to the unexpected accident(like computer crash, power off),
    some unsaved working version might disappear.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because one change may lead to multiple file changes.


How can you use the commands git log and git diff to view the history of files?

    1. git log - see commit list, use "q" to quick
    2. git diff - see different between files, "+" means add and "-" means delete.


How might using version control make you more confident to make changes that
could break something?

    Because I can always go back to the previous!


Now that you have your workspace set up, what do you want to try using Git for?

    Test an example.


